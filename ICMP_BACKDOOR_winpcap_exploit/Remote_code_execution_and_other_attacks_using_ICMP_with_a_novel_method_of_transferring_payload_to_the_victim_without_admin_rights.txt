					Remote code execution and other attacks using ICMP            
						  with a novel method of  transferring 
						   	payload to the victim without 
								elevation of privileges 

        Exploit:Default settings which allow  npf.sys(winpcap) to start at boot 
            (tested against  most of the popular anti-malware software) 

Abstract:-

This paper discusses the methods of attacking the victim using ICMP messages and also demos how to
get around most of the celebrated anti-malware software while doing so. All of these methods are 
carried out while setting the anti-malware and other in-situ malware defenders to maximum security 
thereby simulating a very realistic environment . 
	Since windows systems prevent unsolicited pings by default and anti-malware software even 
more so , the paper sheds light on a very trivial but intuitive method I discovered to create a 
workaround. The advantage in using such a method is that the malware can be instructed dynamically 
to mold itself into different kind of malicious agents whether be it taking on the behavior of Trojans, 
worms ,ransomwares or perpetuated for DDOS and far greater threats. The point is , 
once downloaded, it can be turned into anything .
	Most users if not all of wireshark and other network virtualization  software such as GNS3 
depending on winpcap, select the option to automatically start npf.sys driver of winpcap at windows 
boot . This default setting is exploited to present an easy yet covert way for various types of attacks.
	 The ICMP messages used are either all type 8 code 0 (request) or type 0 code 0(reply). The programming
language used is java with pcap4j being the underlying native wrapper to winpcap library . 

Terminologies Used:-

1.	Package:- The code which the victim downloads either as a jar pretending to be a png or using more
              covert tactics. This basically waits for instructions from the attacker
2.	Payload:- These are basically instructions carried to the victim using ICMP


Introduction:-

Just to give a brief overview , this project was a part of an experiment I did for my computer networking 
course .The initial challenge was to get application layer software running on individual hosts talking to 
each other using ICMP . This gradually over the course of one day matured into an idea to investigate its 
use in malicious activities ,hence this paper. 
	The paper addresses the problem when users of wireshark and other packet monitoring software use winpcap ,
they tend to accept the default settings which instructs npf to start at boot, this prevents the need  for the
package to acquire admin rights to listen for ICMP packets.

Problem Encountered :-

Given the fact that the victim has downloaded the package , how do we allow the ping from the attacker to get
through to the package on the victim’s PC. This is vital since all communication between the attacker and the 
package takes place using ICMP , and these communications essentially define the nature of how the package is 
going to behave.

Solution:-

The solution is a twostep process  which exploits ICMP flaws while keeping the attackers job at bare minimum.

1.	Firstly, the attacker  sends an ICMP type 8 code 0 (echo request) to the gateway 
    posing as the victim using IP-spoofing .

2.	This step is where the flaws of ICMP are exploited . The need for ICMP is basically to communicate network 
    layer information for debugging  and other such processes . This basically implies for an effective connection 
	between host and gateway and hence to the internet , the anti-malware systems employed in the host cannot 
	afford to completely distrust the gateway ( block ICMP traffic from the gateway) . This actually favors us , 
	simply because, our goal as an attacker is primarily to communicate with the package on the victim . By sending 
	the ICMP type 8 code 0 (echo request) to the gateway posing as the victim, the gateway sends a 
	ICMP type 0 code 0 (echo reply) to the actual  victim , this ICMP is however not blocked by the anti-malware 
	system since its sourced from the gateway . RFC 792 page 14 under description pertaining to ICMP echo request 
	and reply states that .

                 “The data received in the echo message must be returned in the echo reply message”

This basically implies , supposing we as an attacker send the payload to the gateway posing as the victim using echo 
request , the gateway sends an echo reply carrying the payload back to the victim , since the anti-malware systems 
allow ICMP from gateway to pass through, we finally ensure that using this trick the payload reaches the package 
on the victim’s PC.Thus , despite having an anti-malware software and other security programs turned on , the payload
is still able to reach the package . 

	IP spoofing the victim posing as the router does not work , hence the above workaround is used.






Process Flow on Victim’s PC 
1.	Once the package has been download and executed , it creates a pool of all the network interface cards present on the PC and by selecting each of them successively  , sends an ARP request to the gateway and waits for a specific duration  for a response. Once the timeout for a particular interface occurs the next one is tested . This is done cause , the package at this point has no idea regarding which interface is being used to access the internet.
2.	Once the package determines the interface connected to the internet , it sends an ICMP message to the attacker acknowledging its setup along with the IP address of the victim’s PC.
3.	As seen beforehand, any direct ICMP traffic between the attacker and victim is filtered out by the protection systems in the Victim’s PC. Hence we use IP spoofing. The attacker constructs an ICMP echo request message with the instruction as the payload and sets the source IP field as the Victim’s IP and destination as the gateway.
4.	The gateway receives the ICMP request , and unknowingly sends an ICMP echo reply to the victim’s PC with the attacker’s instruction as the payload .
5.	The anti-malware systems , realizing the ICMP message is from the gateway , allow it thereby facilitating the package to receive it.
6.	The package carries out the instruction . 
7.	As seen above, unless the instruction itself requires admin rights , this exploit does not require administrator privileges at any other steps.









